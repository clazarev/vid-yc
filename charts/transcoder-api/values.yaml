dotnet_environment: Staging

dbConnectionString:
  secretNameRef: "transcoder-api-db-connection-string"
serviceAccountAccessKeys:
  secretNameRef: "transcoder-sa-creds"

replicaCount: 1

image:
  repository: cr.yandex/crpt9c7igqasaqddbg0p/backend/transcoder/api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: "latest"

imagePullSecrets:
  - name: yc-cr-puller

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }
podLabels:
  group: transcoders

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  portName: transcoderapi
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
  }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 2000m
  #   memory: 128Mi
  requests:
    cpu: 1000m
  #  memory: 128Mi

livenessProbe:
  exec:
    command:
      - find
      - /tmp/healthy
      - -mmin
      - '-1'

readinessProbe:
  exec:
    command:
      - cat
      - /tmp/healthy

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 8
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumes:
  - name: appsettings-volume
    configMap:
      name: transcoder-api # default cm, generated by chart
  - name: appsettings-common
    configMap:
      name: transcoder-common # infrastructure cm pre-generated by terraform

volumeMounts:
  - name: appsettings-volume
    mountPath: /app/appsettings.environment.json
    subPath: appsettings.json
  - name: appsettings-common
    mountPath: /app/appsettings.common.json
    subPath: appsettings.common.json

nodeSelector: { }

tolerations: [ ]

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: api_affinity
              operator: In
              values:
                - "true"
            - key: yandex.cloud/preemptible
              operator: In
              values:
                - "false"

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1
